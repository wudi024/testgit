<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
    http://www.springframework.org/schema/beans/spring-beans.xsd 
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context.xsd
    http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx.xsd">

	<!-- 引入外部属性文件   config_mysql.properties-->
	<context:property-placeholder location="classpath:config.properties" />
	
	<!-- 配置数据源 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<!--maxActive: 最大连接数量 -->
		<property name="maxActive" value="${jdbc.maxActive}" />
		<!--minIdle: 最小空闲连接 -->
		<property name="minIdle" value="${jdbc.minIdle}" />
		<!--maxIdle: 最大空闲连接 -->
		<property name="maxIdle" value="${jdbc.maxIdle}" />
		<!--initialSize: 初始化连接 -->
		<property name="initialSize" value="${jdbc.initialSize}" />
		<!-- 连接被泄露时是否打印 -->
		<property name="logAbandoned" value="${jdbc.logAbandoned}" />
		<!--removeAbandoned: 是否自动回收超时连接 -->
		<property name="removeAbandoned" value="${jdbc.removeAbandoned}" />
		<!--removeAbandonedTimeout: 超时时间(以秒数为单位) -->
		<property name="removeAbandonedTimeout" value="${jdbc.removeAbandonedTimeout}" />
		<!--maxWait: 超时等待时间以毫秒为单位 1000等于60秒 -->
		<property name="maxWait" value="${jdbc.maxWait}" />
		<!-- 在空闲连接回收器线程运行期间休眠的时间值,以毫秒为单位. -->
		<property name="timeBetweenEvictionRunsMillis" value="${jdbc.timeBetweenEvictionRunsMillis}" />
		<!-- 在每次空闲连接回收器线程(如果有)运行时检查的连接数量 -->
		<property name="numTestsPerEvictionRun" value="${jdbc.numTestsPerEvictionRun}" />
		<!-- 1000 * 60 * 30 连接在池中保持空闲而不被空闲连接回收器线程 -->
		<property name="minEvictableIdleTimeMillis" value="${jdbc.minEvictableIdleTimeMillis}" />
		<property name="validationQuery" value="${jdbc.validationQuery}" />
	</bean>
	
	<bean id="sessionFactory" 
		class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.Oracle10gDialect</prop>
				<prop key="hibernate.jdbc.batch_size">20</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.use_outer_join">true</prop>
				<!-- <prop key="hibernate.cache.use_second_level_cache">false</prop>
				<prop key="hibernate.cache.provider_class">com.googlecode.hibernate.memcached.MemcachedCacheProvider
				</prop> 
				<prop key="hibernate.cache.use_query_cache">false</prop>
				<prop key="hibernate.cache.default_cache_concurrency_strategy">nonstrict-read-write</prop>-->
			</props>
		</property>
	</bean>
	<!-- 配置数据源 -->

	<!-- 配置业务层 -->
	<bean id="accountService" class="com.ck.transactionDemo.impl.AccountServiceImpl">
		<property name="accountDao" ref="accountDao" />
		<property name="transactionTemplate" ref="transactionTemplate" />
		<property name="accountServiceP" ref="accountServiceP" />
	</bean>

	<!-- 配置DAO层,注入连接池就可以得到jdbc模板 -->
	<bean id="accountDao" class="com.ck.transactionDemo.dao.AccountDaoImpl_h">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	
	<!-- 配置子业务层 -->
	<bean id="accountServiceP" class="com.ck.transactionDemo.impl.AccountServiceImplP">
		<property name="accountDao" ref="accountDao" />
		<property name="transactionTemplate" ref="transactionTemplate" />
	</bean>   
   
	
	<!-- 从这里开始增加事务配置，删掉以下事务管理，转入成功，转出失败将不会回滚 -->
	<!-- 配置事务管理器 -->
    <bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager"> 
		<property name="sessionFactory" ref="sessionFactory" /> 
	</bean> 
    
    <!-- 配置事务管理模板 -->
    <bean id = "transactionTemplate" class="org.springframework.transaction.support.TransactionTemplate">
        <property name="transactionManager" ref="transactionManager"/>
    </bean>

	<!-- 实际开启事务行为 -->
   	<tx:annotation-driven transaction-manager="transactionManager" /> 
</beans>